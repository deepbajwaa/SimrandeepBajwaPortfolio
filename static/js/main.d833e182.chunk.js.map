{"version":3,"sources":["components/NavMenu.js","components/CasewarePage.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","NavMenu","theme","onClick","this","handleClick","mode","Item","icon","HomeOutlined","to","QuestionCircleOutlined","FileTextOutlined","DesktopOutlined","title","AuditOutlined","CodeOutlined","NotificationOutlined","ShareAltOutlined","MailOutlined","href","GithubOutlined","target","rel","LinkedinOutlined","Component","Title","Typography","Paragraph","CasewarePage","class","level","Header","Layout","Sider","Content","App","state","collapsed","toggle","setState","className","style","minHeight","trigger","collapsible","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","src","alt","margin","padding","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d833e182.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Menu } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n    HomeOutlined,\r\n    QuestionCircleOutlined,\r\n    FileTextOutlined,\r\n    DesktopOutlined,\r\n    AuditOutlined,\r\n    CodeOutlined,\r\n    NotificationOutlined,\r\n    ShareAltOutlined,\r\n    MailOutlined,\r\n    GithubOutlined,\r\n    LinkedinOutlined,\r\n  } from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass NavMenu extends Component {\r\n    render() {\r\n        return (\r\n            <Menu \r\n            theme=\"dark\" \r\n            onClick={this.handleClick}\r\n            mode=\"inline\"\r\n            >\r\n              <Menu.Item icon={<HomeOutlined />}>\r\n                Home\r\n                <Link to=\"/SimrandeepBajwaPortfolio\"></Link>\r\n              </Menu.Item>\r\n              <Menu.Item icon={<QuestionCircleOutlined />}>\r\n                About\r\n              </Menu.Item>\r\n              <Menu.Item icon={<FileTextOutlined />}>\r\n                Resume\r\n              </Menu.Item>\r\n              <SubMenu icon={<DesktopOutlined />} title=\"Work-Terms\">\r\n                  <Menu.Item icon={<AuditOutlined />}>\r\n                    CaseWare\r\n                    <Link to=\"/SimrandeepBajwaPortfolio/Caseware\"></Link>\r\n                  </Menu.Item>\r\n              </SubMenu>\r\n              <Menu.Item icon={<CodeOutlined />}>\r\n                Projects\r\n              </Menu.Item>\r\n              <Menu.Item icon={<NotificationOutlined />}>\r\n                Awards\r\n              </Menu.Item>\r\n              <SubMenu icon={<ShareAltOutlined />} title=\"Other Links\">\r\n                  <Menu.Item icon={<MailOutlined />}>\r\n                    <a href = \"mailto: sbajwa05@uoguelph.ca\">Email</a>\r\n                  </Menu.Item>\r\n                  <Menu.Item icon={<GithubOutlined />}>\r\n                    <a href=\"https://github.com/deepbajwaa\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\r\n                  </Menu.Item>\r\n                  <Menu.Item icon={<LinkedinOutlined />}>\r\n                    <a href=\"https://www.linkedin.com/in/simrandeepbajwa/\" target=\"_blank\" rel=\"noopener noreferrer\">Linkedin</a>\r\n                  </Menu.Item>\r\n              </SubMenu>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavMenu;","import React, { Component } from 'react';\r\nimport { Typography } from 'antd';\r\nimport './CasewarePage.css';\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nclass CasewarePage extends Component {\r\n    render() {\r\n        return (\r\n            <Typography class=\"text\">\r\n                <Title level={2}>Introduction</Title>\r\n                <Paragraph>\r\n                    Welcome! My name is Simrandeep Bajwa, and I am a 3rd year student at the University of Guelph majoring in Computer Science \r\n                    along with a minor in Business.Through the following reflection, I will showcase my involvement and the experience I have \r\n                    obtained through my first Co-op work term. Through hard work and numerous job applications, I was fortunate enough to land a \r\n                    job as a Software Developer at CaseWare for 8 months. In retrospect, I was very nervous going downtown Toronto for this job \r\n                    interview. Nevertheless, Iâ€™m appreciative that Caseware took me under their wing and opened up new opportunities, further \r\n                    expanding my interest in software engineering.\r\n                </Paragraph>\r\n                <Title level={2}>What does CaseWare do?</Title>\r\n                <Paragraph>\r\n                    Caseware is an international corporation that focuses on developing software solutions for auditing, financial reporting, and \r\n                    data analytics. They have a range of solutions that serve at different levels such as accounting firms, corporations, and \r\n                    government bodies. Caseware consists of several teams as every team focuses on distinct software and different parts of the \r\n                    codebase. For example, certain squads within a team may be concerned with front-end development, meanwhile others are focusing \r\n                    on back-end development.  Nevertheless, the distinct squads must work together closely and simultaneously in efforts which \r\n                    require multiple squads. Caseware continuously works on pushing out new innovative technology to change the future of \r\n                    accounting and auditing. Caseware even has some products that use artificial intelligence in order to perform an analysis on a \r\n                    given data set and transactions to detect any anomalies.\r\n                </Paragraph>\r\n                <Title level={2}>Goals</Title>\r\n                <Paragraph> \r\n                    In order to make this experience educational and advantageous for myself, I established the following goals:\r\n                        <br/>1. To learn about the Agile methodology, and applying it to a real workplace environment\r\n                        <br/>2. Increase my knowledge of web development (specifically the Angular framework), to complement my knowledge of backend development.\r\n                        <br/>3. Writing clean and well thought out efficient code that can be reused in the future.\r\n                        <br/>4. Be able to create a minor feature that is introduced to the software, or be able to make bug fixes independently.\r\n                        <br/>5. Work on developing better public speaking skills by the end of the work term.\r\n                        <br/><br/>I believe I have been successful at achieving these goals that I set for myself over the 8 month term. I was able to learn \r\n                        the Agile methodology through courses on Linkedin learning and by engaging in daily Agile ceremonies. My team used Angular \r\n                        to create the front-end of our application, which allowed me to learn about web development. I learned about writing clean \r\n                        code through the comments and feedback my mentors gave me on my code. My team started me off with bugs, and then gradually \r\n                        moved me on to stories and features. At first I required help from my mentors, however, over time I started to become more \r\n                        independent. I was presented with opportunities to demonstrate my work to fellow co-workers allowing me to exercise my \r\n                        public speaking skills. After reaching all of these goals, I can truly say that I have grown immensely as a person and a \r\n                        developer.\r\n                </Paragraph>\r\n            </Typography>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CasewarePage;","import React, { Component } from 'react';\nimport NavMenu from './components/NavMenu';\nimport CasewarePage from './components/CasewarePage';\nimport './App.css';\nimport { Layout, Avatar  } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n} from '@ant-design/icons';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nconst { Header, Sider, Content } = Layout;\n\nclass App extends Component {\n  state = {\n    collapsed: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Layout style={{minHeight:\"100vh\"}}>\n            <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n              <div className=\"logo\" />\n              <NavMenu/>\n            </Sider>\n            <Layout className=\"site-layout\">\n              <Header className=\"site-layout-background\">\n                {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                  className: 'trigger',\n                  onClick: this.toggle,\n                })}\n                <img src=\"./3rd.jpg\" alt=\"selfie\"/>\n                <span><img src=\"IMG_0607.JPG\" alt=\"test\"/></span>\n              </Header>\n              <Content\n                className=\"site-layout-background\"\n                style={{\n                  margin: '24px 16px',\n                  padding: 24,\n                }}\n              >\n                <Route path=\"/SimrandeepBajwaPortfolio\" exact/>\n                <Route path=\"/SimrandeepBajwaPortfolio/Caseware\" component={CasewarePage}/>\n              </Content>\n            </Layout>\n          </Layout>\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}